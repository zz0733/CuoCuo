{"version":3,"sources":["../../../../../../../assets/mahjong/script/wahua/common/assets/mahjong/script/wahua/common/whUtils.js"],"names":["HuaPai","PaiId","whUtils","getSameValueByArray","arr","list","indexArr","i","length","hasRead","k","_index","haveSame","j","push","getCardIndex","card","idx","func","id","setSortByCards","cards","cardsSort","Array","sameIdxArr","sortPaiFunc","sort","a","b","ca","cb","songCardArray","gang","bpCount","s","newCardArr","newIndexArr","newSameIdxArr","singleCardArr","singleIndexArr","singleSameIdxArr","same","apply","enableNum","cardArr","enableNumber","songCardArr","fun","event","dispatch","getCardById","bc","newId","name","checkCardEnable","cardsAll","singleIdx","cardIdx","isBaiPi","cc","log","song","getSaiziPointByCard","p1","substr","p2","getMinMaxByArray","type","Math","min","max","getArrayByDouble","arr1","arr2","getNodePos","curNode","targetNode","worldPos","parent","convertToWorldSpaceAR","position","pos","convertToNodeSpaceAR","setPaiEnable","paiNode","isTouch","isVisable","getChildByName","active","rgb","r","g","color","Color","module","exports"],"mappings":"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","file":"whUtils.js","sourceRoot":"../../../../../../../assets/mahjong/script/wahua/common","sourcesContent":["/**\n *牌id对应牌*\n\t- 白皮: 1-21 / 22-42 / 43-63\n\t- 单匡: 64-84\n\t- 双框: 85-105 / 106-126\n\t- 花牌: 127-130 春夏秋冬 / 131-134 梅兰竹菊 / 135-136 白板\n\t- 11(1/22/43) 12(2) 13(3) 14(4) 15(5) 16(6) 22(7) 23(8) 24(9) 25(10) 26(11)    \n\t  33(12) 34(13) 35(14) 36(15) 44(16) 45(17) 46(18) 55(19) 56(20) 66(21)\n *牌对应牌的名称*\n \t- 非花牌名称\n\t \tcard_a_b_c / eg: car_0_1_1\n\t\ta: 0-白皮 1-双框 2-单匡\n\t\tb/c 代表对应的数字\n\t- 花牌名称\n\t\t春夏秋冬: card_spring  card_summer  card_autumn  card_winter\n\t\t梅兰竹菊: card_mei     card_lang    card_zhu     card_ju\n\t    白板   : card_bai\n *字段含义*\n\t- gamePhase: 游戏阶段 0-准备 1-发庄 2-摇色子 3-开始游戏/发牌 4-检查牌/打牌/补花 5-结算 6-解散房间\n    - gameStatu: 游戏状态 1-未开始 2-进行中 3-已结束\n */\n\nconst HuaPai = ['spring', 'summer', 'autumn', 'winter', 'mei', 'lang', 'zhu', 'ju', 'bai', 'bai'];\nconst PaiId = ['1_1', '1_2', '1_3', '1_4', '1_5', '1_6', '2_2', '2_3', '2_4', '2_5','2_6', // 1-11\n               '3_3', '3_4','3_5', '3_6', '4_4', '4_5', '4_6', '5_5', '5_6', '6_6']; // 12-21\n\nlet whUtils = {\n\n\t/**\n\t * 获取数组中相同元素的下标\n\t * @param {Array} arr\n\t */\n\tgetSameValueByArray(arr) {\n\t\tlet list = [], indexArr = [];\n\t\tfor (let i = 0; i < arr.length; ++i) {\n\t\t\tlet hasRead = false;\n\t\t\tfor (let k = 0; k < list.length; ++k) {\n\t\t\t\tif (i === list[k]) {\n\t\t\t\t\thasRead = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!hasRead) {\n\t\t\t\tlet _index = [], haveSame = false;\n\t\t\t\t_index[0] = i;\n\t\t\t\tfor (let j = i + 1; j < arr.length; ++j) {\n\t\t\t\t\tif (arr[i] == arr[j]) {\n\t\t\t\t\t\tlist.push(j);\n\t\t\t\t\t\t_index[_index.length] = j;\n\t\t\t\t\t\thaveSame = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (haveSame) {\n\t\t\t\t\tindexArr[indexArr.length] = _index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn indexArr;\n\t},\n\n\n\t/**\n\t * 根据牌id返回其对应的白皮的值\n\t * @param {INT} number 牌\n\t */\n\tgetCardIndex(card) {\n\t\tlet idx = card;\n\t\tlet func = function (id) {\n\t\t\treturn id > 21 ? id - 21 : id;\n\t\t}\n\t\tif (idx < 127) {\n\t\t\tdo {\n\t\t\t\tidx = func(idx);\n\t\t\t} while (idx > 21);\n\t\t}\n\t\treturn idx;\n\t},\n\n\t/**\n\t * 对牌进行重新排序\n\t * @param {Array} cards 服务器发来的牌\n\t * cardsSort = {\n\t * \t\tcardArr:      [ ],  与服务器为准的牌的号码\n\t * \t\tindexArr:     [ ],  将白皮、单框和双框牌都换做白皮牌  即0-21\n\t * \t\tenableNumber: INT,  不能出的牌即不能触摸的牌的数量\n\t * \t\tsongCardArr:  INT,  送牌的索引值数组\n\t * }\n\t * return cardsSort重新排好序的牌\n\t */\n\tsetSortByCards(cards) {\n\t\t// 获取牌对应的白皮id\n\t\tlet cardsSort = {};\n\t\tlet indexArr = new Array();\n\n\t\tfor (let i = 0; i < cards.length; ++i) {\n\t\t\tindexArr[i] = this.getCardIndex(cards[i]);\n\t\t}\n\t\tlet sameIdxArr = this.getSameValueByArray(indexArr);\n\t\t\n\t\t// 小于127的牌 白皮 双框 单框 排序算法\n\t\tlet sortPaiFunc = function(arr) {\n\t\t\t return arr.sort(function (a, b) {\n\t\t\t\tlet ca = cards[a], cb = cards[b];\n\t\t\t\tif (ca < 127 && cb < 127) {\n\t\t\t\t\tif ((ca > 63 && ca < 85 && cb > 84) || (cb > 63 && cb < 85 && ca > 84)) {\n\t\t\t\t\t\treturn ca - cb;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn cb - ca;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// 检测多个相同元素中是否有杠 和 送牌\n\t\tlet songCardArray = [];\n\t\tfor (let i = 0; i < sameIdxArr.length; ++i) {\n\t\t\tsameIdxArr[i] = sortPaiFunc(sameIdxArr[i]);\n\t\t\tif (sameIdxArr[i].length > 2) {\n\t\t\t\tlet gang = true, bpCount = 0;\n\t\t\t\tfor (let j = 0; j < sameIdxArr[i].length; ++j) {\n\t\t\t\t\tif (cards[sameIdxArr[i][j]] < 64) bpCount++;\n\t\t\t\t}\n\t\t\t\tswitch (sameIdxArr[i].length) {\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tif (bpCount >= 1) gang = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tif (bpCount >= 2) gang = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 5:\n\t\t\t\t\t\tif (bpCount >= 3) gang = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (gang) {\n\t\t\t\t\tif (sameIdxArr[i].length > 3) {\n\t\t\t\t\t\tfor (let s = 3; s < sameIdxArr[i].length; s++) {\n\t\t\t\t\t\t\tsongCardArray[songCardArray.length] = cards[sameIdxArr[i][s]];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsameIdxArr[i] = [sameIdxArr[i][0], sameIdxArr[i][1], sameIdxArr[i][2]];\n\t\t\t\t} else {\n\t\t\t\t\tif (sameIdxArr[i].length > 2) {\n\t\t\t\t\t\tfor (let s = 2; s < sameIdxArr[i].length; s++) {\n\t\t\t\t\t\t\tsongCardArray[songCardArray.length] = cards[sameIdxArr[i][s]];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tsameIdxArr[i] = [sameIdxArr[i][0], sameIdxArr[i][1]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// cc.log('=== 4.sameIdxArr : ', sameIdxArr);\n\n\t\t// 重新排序\n\t\tlet newCardArr = [], newIndexArr = [], newSameIdxArr = [];\n\t\tlet singleCardArr = [], singleIndexArr = [], singleSameIdxArr = [];\n\t\tfor (let i = 0; i < sameIdxArr.length; ++i) {\n\t\t\tfor (let j = 0; j < sameIdxArr[i].length; ++j) {\n\t\t\t\tlet idx = sameIdxArr[i][j];\n\t\t\t\tnewCardArr[newCardArr.length] = cards[idx];\n\t\t\t\tnewIndexArr[newIndexArr.length] = indexArr[idx];\n\t\t\t\tnewSameIdxArr[newSameIdxArr.length] = idx;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < cards.length; ++i) {\n\t\t\tlet same = false;\n\t\t\tfor (let j = 0; j < newSameIdxArr.length; ++j) {\n\t\t\t\tif (i === newSameIdxArr[j]) same = true;\n\t\t\t}\n\t\t\tif (!same) {\n\t\t\t\tsingleSameIdxArr[singleSameIdxArr.length] = i;\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\tsingleSameIdxArr.sort(function (a, b) { return cards[a] - cards[b]; });\n\t\tsingleSameIdxArr = sortPaiFunc(singleSameIdxArr);\n\t\tfor (let i = 0; i < singleSameIdxArr.length; ++i) {\n\t\t\tif (cards[singleSameIdxArr[i]]) {\n\t\t\t\tsingleCardArr[singleCardArr.length] = cards[singleSameIdxArr[i]];\n\t\t\t\tsingleIndexArr[singleIndexArr.length] = indexArr[singleSameIdxArr[i]];\n\t\t\t}\n\t\t}\n\t\tnewCardArr.push.apply(newCardArr, singleCardArr);\n\t\tnewIndexArr.push.apply(newIndexArr, singleIndexArr);\n\n\t\t// 检测牌是否灰掉\n\t\tlet enableNum = newSameIdxArr.length;\n\t\tfor (let i = 0; i < newCardArr.length; ++i) {\n\t\t\tif (i >= newSameIdxArr.length) {\n\t\t\t\tif (newCardArr[i] < 64) {\n\t\t\t\t\tenableNum = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcardsSort.cardArr = newCardArr;\n\t\tcardsSort.indexArr = newIndexArr;\n\t\tcardsSort.enableNumber = enableNum;\n\t\tcardsSort.songCardArr = songCardArray;\n\t\tfun.event.dispatch('whUpdatedCards', cardsSort);\n\t\treturn cardsSort;\n\t},\n\n\n\t/**\n\t * 通过牌id获取牌的图片名称\n\t * @param {INT} id 牌id\n\t */\n\tgetCardById(id) {\n\t\tlet a = 0, bc = '1_1', newId = 1;\n\t\tif (id < 127) {\n\t\t\tif (id < 64) {\n\t\t\t\ta = 0;\n\t\t\t\tnewId = id > 21 ? (id > 42 ? (id - 42) : (id - 21)) : id;\n\t\t\t} else if (id >= 64 && id < 85) {\n\t\t\t\ta = 2;\n\t\t\t\tnewId = id - 63;\n\t\t\t} else {\n\t\t\t\ta = 1;\n\t\t\t\tnewId = id > 105 ? (id - 105) : (id - 84)\n\t\t\t}\n\t\t\tbc = PaiId[newId-1];\n\t\t\tlet name = 'card_' + a + '_' + bc;\n\t\t\treturn name\n\t\t} else {\n\t\t\tlet name = 'card_' + HuaPai[id-126-1];\n\t\t\treturn name;\n\t\t}\n\t\treturn false;\n\t},\n\n\n\t/**\n\t * 检测牌是否暗色或者触摸\n\t * @param {INT} card     待检测的牌\n\t * @param {Array} cards  牌的数组\n\t * \t\t\t\n\t * \t\t\t                  - 相同牌型中有白皮 (摸牌暗 白皮显示送牌 并且单牌中的非送牌白皮暗)\n\t * \t\t\t  -\t对子里有相同牌型 -\t\t\t                        - 有: 摸牌暗\n\t *            -               - 相同牌型中没有白皮 单牌中是否有白皮 -\n\t *            -                                                  - 没有: 摸牌不暗\n\t *     - 框牌  -\n\t *     -      -                                                            - 有 摸牌和单牌暗 单牌中除去已配对的白皮是否还有白皮 如果没有则将剩余单牌中的框牌全部亮起\n\t *     -      -                                   - 有 摸牌与单牌是否有相同牌型 -\n\t *     -      - 对子里没有相同牌型 单牌中是否有白皮 -                            - 没有 摸牌暗\n\t *     -                                          - 没有 摸牌与单牌是否有相同牌型 如果有 则将配对的牌和摸牌一起暗掉\n\t * 摸牌 -\n\t *     -\n\t *     -                       - - 有 摸牌显示送牌 将单排中非送牌的白皮暗掉\n\t *     -                       -\n\t *     - 白皮 对子里是否有相同牌型 -                                                        - 有 摸牌和已配对的牌暗\n\t *                             -                       - 有 单牌中除去已配对的牌是否还有白皮 -\n\t *                             - 没有 单牌里是否有相同牌型 -                                - 没有 摸牌和已配对的牌暗 且 单牌中的其他牌亮\n\t *                                                     - 没有 单牌中是否有送牌 有送牌且摸牌不是送牌则摸牌暗\n\t * \n\t * 出牌顺序:\n\t * \t\t  - 先打自己有杠的多余白皮\n     *        - 再打自己已经拼对的多余白皮（也分生熟张）\n     *        - 而后打其他玩家已经杠起的多余白皮（自己手中可以成型对子的除外）\n     *        - 打白不留白：打过的白皮再摸上来必须先打掉\n     *        - 有送子要先打送子\n     *        - 先打熟张，再打生张\n\t * \n\t * return { an: { }, liang: { }, song: { } }\n\t */\n\tcheckCardEnable(card, cardsAll) {\n\t\tlet cards = cardsAll.cardArr;\n\t\tlet singleIdx, cardIdx = this.getCardIndex(card);\n\t\tfor (let i = 0; i < cards.length; i += 2) {\n\t\t\tif (this.getCardIndex(cards[i]) !== this.getCardIndex(cards[i+1])) {\n\t\t\t\tif (cards[i - 1] && this.getCardIndex(cards[i]) !== this.getCardIndex(cards[i-1])) {\n\t\t\t\t\tsingleIdx = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tif (card > 63) {\n\t\t\tlet isBaiPi = false;\n\t\t\tfor (let i = singleIdx; i < cards.length; ++i) {\n\t\t\t\tif (cards[i] < 64) isBaiPi = true;\n\t\t\t}\n\t\t\tfor (let i = 0; i < singleIdx; ++i) {\n\t\t\t\tif (cardIdx === this.getCardIndex(cards[i]) && card !== cards[i]) {\n\t\t\t\t\tcc.log('--- 1.摸牌是框牌 且 对子里有 ---');\n\t\t\t\t\tif (cards[i+1] < 64) {\n\t\t\t\t\t\t// let reObject = { song: card[i+1] }\n\t\t\t\t\t\treturn { song: cards[i + 1] }\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isBaiPi) {\n\t\t\t\tfor (let i = singleIdx; i < cards.length; ++i) {\n\t\t\t\t\tif (cardIdx === this.getCardIndex(cards[i]) && card !== cards[i]) {\n\t\t\t\t\t\tcc.log('--- 2.摸牌是框牌 且 对子里没有 且 单牌里有 ---');\n\t\t\t\t\t\treturn cards[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcc.log('--- 3.摸牌是框牌 且 对子里没有 且 单牌里没有 ---');\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tfor (let i = singleIdx; i < cards.length; ++i) {\n\t\t\t\t\tif (cardIdx === this.getCardIndex(cards[i]) && card !== cards[i]) {\n\t\t\t\t\t\tcc.log('--- 4.摸牌是框牌 且 对子里没有 且 单牌里有 ---');\n\t\t\t\t\t\treturn cards[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcc.log('--- 5.摸牌是框牌 且 对子里没有 且 单牌里没有 且 没有白皮 ---');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i = 0; i < singleIdx; ++i) {\n\t\t\t\tif (cardIdx === this.getCardIndex(cards[i])) {\n\t\t\t\t\tcc.log('--- 6.摸牌是白皮 且 对子里有 ---');\n\t\t\t\t\treturn { song: true };\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = singleIdx; i < cards.length; ++i) {\n\t\t\t\tif (cardIdx === this.getCardIndex(cards[i]) && card !== cards[i]) {\n\t\t\t\t\tcc.log('--- 7.摸牌是白皮 且 对子里没有 且 单牌里有 ---');\n\t\t\t\t\treturn cards[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcc.log('--- 8.摸牌是白皮 且 对子里没有 且 单牌里没有 ---');\n\t\t\treturn false;\n\t\t}\n\t},\n\n\n\t/**\n\t * 根据牌的图片的名称获取色字的点数\n\t * @param {String} card \n\t */\n\tgetSaiziPointByCard(card) {\n\t\treturn {p1: card.substr(7, 1), p2: card.substr(9, 1)};\n\t},\n\n\n\t/**\n\t * 获取数组的最值\n\t * @param {String} type 类型 最小值或者最大值\n\t * @param {Array} data 数组\n\t */\n\tgetMinMaxByArray(type, arr) {\n\t\tif (type === 'min') {\n\t\t\treturn Math.min.apply(Math, arr);\n\t\t} else {\n\t\t\treturn Math.max.apply(Math, arr);\n\t\t}\n\t},\n\n\n\t/**\n\t * 数组合并\n\t * @param {Array} arr1 数组1\n\t * @param {Array} arr2 数组2\n\t * return 新的数组\n\t */\n\tgetArrayByDouble(arr1, arr2) {\n\t\treturn arr1.push.apply(arr1, arr2);\n\t},\n\n\n\t/**\n\t * 获取当前节点转换到某节点下的坐标\n\t * @param {cc.Node} curNode     待转换坐标的节点\n\t * @param {cc.Node} targetNode  目标节点\n\t * return 坐标\n\t */\n\tgetNodePos(curNode, targetNode) {\n\t\tlet worldPos = curNode.parent.convertToWorldSpaceAR(curNode.position);\n\t\tlet pos = targetNode.convertToNodeSpaceAR(worldPos);\n\t\treturn pos;\n\t},\n\n\n\t/**\n\t * 设置牌是否暗色或者能否触摸\n\t * @param {cc.Node} paiNode 牌的节点\n\t * @param {Bool} isTouch    是否触摸 \n\t * @param {Bool} isVisable  是否暗色\n\t */\n\tsetPaiEnable(paiNode, isTouch, isVisable) {\n\t\tpaiNode.getChildByName('touchOff').active = !isTouch;\n\t\tlet rgb = isVisable ? { r: 255, g: 255, b: 255, a: 255 } : { r: 187, g: 187, b: 187, a: 255 }\n\t\tpaiNode.color = new cc.Color(rgb)\n\t},\n\n};\n\nmodule.exports = whUtils;"]}