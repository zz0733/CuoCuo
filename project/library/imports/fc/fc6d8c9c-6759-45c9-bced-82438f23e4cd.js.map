{"version":3,"sources":["../../../../../../assets/hall/script/fun/assets/hall/script/fun/funNetMgr.js"],"names":["CmdLength","MaxPlatformCmd","MsgTimeout","MaxHeartBeatTimes","HeartBeatInterval","ConnectTimeOut","MaxUnLoginTime","MaxConnectTimes","NormalCloseCode","PlatformMsgCfg","require","GameMsgCfg","MgrState","cc","Enum","Init","Connecting","ConnectError","Connected","Logined","MsgTimeOut","BeKicked","Closed","reConnect","len","m","c","k","Class","connect","url","handler","fun","log","openHandler","push","connectTimes","lastConnectTime","currTime","socket","WebSocket","onopen","_onOpen","bind","onclose","_onClose","onerror","_onError","onmessage","_onMessage","state","addOpenCb","setGameMsgCfg","cfg","listenMessageDelay","setState","close","send","cmdStr","message","_isConnected","sendHandler","lastResponseFlag","_netStartDelayTime","Date","now","lastSendTime","cmd","req","JSON","stringify","listen","listenHandler","rmListen","code","pSend","pSendHandler","pListen","pListenHandler","needDel","pListenMessageDelay","forEach","value","index","i","length","splice","rmPListen","ctor","dtsum","gameCfg","loginUrl","sendHeartbeatTimes","destroy","update","dt","_showConnectTimeOut","_showDisConnect","onOpenTime","sendHeartBeat","findFlag","data","_getMsgCfgData","netType","item","_gonMessage","event","_showConnectError","_reConnect","_showMsgTimeOut","token","sys","localStorage","getItem","net","Token","Platform","os","userInfo","db","getData","RoomId","Address","location","rsp","setData","dispatch","changeData","parseInt","substr","str","parse","Error","err","_ponMessage","save","timeCha","cb","flag","notify","contentStr","okBtnStr","closeBtnStr","okCb","utils","restart","closeCb","endGame","text","from","readyState","OPEN"],"mappings":"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","file":"funNetMgr.js","sourceRoot":"../../../../../../assets/hall/script/fun","sourcesContent":["const CmdLength = 3;\r\nconst MaxPlatformCmd = 400;\r\nconst MsgTimeout = 1000 * 3;\r\nconst MaxHeartBeatTimes = 5;\r\nconst HeartBeatInterval = 1000 * 30;\r\nconst ConnectTimeOut = 1000 * 4;\r\nconst MaxUnLoginTime = 1000 * 30;\r\nconst MaxConnectTimes = 3;\r\nconst NormalCloseCode = 1000;\r\nconst PlatformMsgCfg = require(\"MessageCfg\");\r\nlet GameMsgCfg = {};\r\n\r\nconst MgrState = cc.Enum({\r\n    Init: 0,\r\n    Connecting: 1,\r\n    ConnectTimeOut: 2,\r\n    ConnectError: 3,\r\n    Connected: 4,\r\n    Logined: 5,\r\n    MsgTimeOut: 6,\r\n    BeKicked: 7,\r\n    Closed: 8,\r\n    reConnect: 9,\r\n});\r\n\r\nlet len = function (m) {\r\n    let c = 0;\r\n    for (const k in m) {\r\n        c++;\r\n    }\r\n    return c;\r\n};\r\n\r\ncc.Class({\r\n\r\n    connect(url, handler) {\r\n        fun.log('net', `connect url = ${url}, this.url = ${this.url}`);\r\n        this.url = url || this.url;\r\n        if (handler) {\r\n            this.openHandler.push(handler);\r\n        }\r\n        this.connectTimes++;\r\n        this.lastConnectTime = this.currTime;\r\n\r\n        this.socket = new WebSocket(this.url);\r\n        this.socket.onopen = this._onOpen.bind(this);\r\n        this.socket.onclose = this._onClose.bind(this);\r\n        this.socket.onerror = this._onError.bind(this);\r\n        this.socket.onmessage = this._onMessage.bind(this);\r\n        if (this.state !== MgrState.reConnect) {\r\n            this.state = MgrState.Connecting;\r\n        }\r\n    },\r\n\r\n    addOpenCb(handler) {\r\n        this.openHandler.push(handler);\r\n    },\r\n\r\n    setGameMsgCfg(cfg = {}) {\r\n        GameMsgCfg = cfg;\r\n        if (len(GameMsgCfg) === 0) {\r\n            this.listenMessageDelay = [];\r\n        }\r\n    },\r\n\r\n    setState(state) {\r\n        switch (state) {\r\n            case 'Login':\r\n                this.state = MgrState.Logined;\r\n                break;\r\n            case 'KickOff':\r\n                this.state = MgrState.BeKicked;\r\n                this.socket.close(NormalCloseCode);\r\n                break;\r\n        }\r\n    },\r\n\r\n    send(cmdStr, message={}, handler = false) {\r\n        if (!this._isConnected()) {\r\n            fun.log('net', 'send error: unconnected');\r\n            return false;\r\n        }\r\n        if (handler) {\r\n            // 过滤网络不好时，用户重复发送的需回复相同同消息；如果确认不会同时发送需回复的消息，则可全屏蔽\r\n            if (this.sendHandler[cmdStr]) {\r\n                fun.log('net', 'send error: wait for response ' + cmdStr);\r\n                return false;\r\n            }\r\n            this.lastResponseFlag = false;\r\n            this.sendHandler[cmdStr] = handler;\r\n            this._netStartDelayTime = Date.now();\r\n        }\r\n        this.lastSendTime = this.currTime;\r\n        let cmd = GameMsgCfg[cmdStr].req;\r\n        message = JSON.stringify(message);\r\n        fun.log('net', `send ${cmdStr} ${cmd} ${message}`);\r\n        this.socket.send(cmd + message);\r\n        return true;\r\n    },\r\n\r\n    listen(cmdStr, handler) {\r\n        if (this.listenHandler[cmdStr]) {\r\n            fun.log('net', 'listener error, has added handler of ' + cmdStr);\r\n            return;\r\n        }\r\n        fun.log('net', 'listen ' + cmdStr);\r\n        this.listenHandler[cmdStr] = handler;\r\n    },\r\n\r\n    rmListen(cmdStr) {\r\n        delete this.listenHandler[cmdStr];\r\n    },\r\n\r\n    close(code = NormalCloseCode) {\r\n        fun.log('net', 'close xxxxx ' + code);\r\n        if (this.socket) {\r\n            this.socket.close(code);\r\n        }\r\n    },\r\n\r\n    pSend(cmdStr, message, handler = false) {\r\n        if (!this._isConnected()) {\r\n            fun.log('net', 'pSend error: unconnected');\r\n            return false;\r\n        }\r\n        if (handler) {\r\n            if ((cmdStr !== 'Heartbeat') && this.pSendHandler[cmdStr]) {\r\n                fun.log('net', 'pSend error: wait for response ' + cmdStr);\r\n                return false;\r\n            }\r\n            this.lastResponseFlag = false;\r\n            this.pSendHandler[cmdStr] = handler;\r\n            this._netStartDelayTime = Date.now();\r\n        }\r\n        this.lastSendTime = this.currTime;\r\n        let cmd = PlatformMsgCfg[cmdStr].req;\r\n        message = JSON.stringify(message);\r\n        fun.log('net', `pSend ${cmdStr} ${cmd} ${message}`);\r\n        this.socket.send(cmd + message);\r\n        return true;\r\n    },\r\n\r\n    pListen(cmdStr, handler) {\r\n        if (this.pListenHandler[cmdStr]) {\r\n            fun.log('net', 'pListen error, has added handler of ' + cmdStr);\r\n            return;\r\n        }\r\n        fun.log('net', 'pListen ' + cmdStr);\r\n        this.pListenHandler[cmdStr] = handler;\r\n        let needDel = [];\r\n        this.pListenMessageDelay.forEach(function (value, index) {\r\n            if (value.cmdStr === cmdStr) {\r\n                needDel.push(index);\r\n                handler(value.message);\r\n            }\r\n        });\r\n        for (let i = needDel.length - 1; i >= 0; i--) {\r\n            this.pListenMessageDelay.splice(needDel[i], 1);\r\n        }\r\n    },\r\n\r\n    rmPListen(cmdStr) {\r\n        delete this.pListenHandler[cmdStr];\r\n    },\r\n\r\n    ctor () {\r\n        this.state = MgrState.Init;\r\n\r\n        this.dtsum = 0;\r\n        this.currTime = Date.now();\r\n\r\n        this.connectTimes = 0;\r\n        this.lastConnectTime = null;\r\n        this.url = fun.gameCfg.loginUrl;\r\n        this.socket = null;\r\n        this.openHandler = [];\r\n\r\n        this.lastSendTime = null;\r\n        this.lastResponseFlag = true;\r\n        this.sendHeartbeatTimes = 0;\r\n\r\n        this.sendHandler = {};\r\n        this.listenHandler = {};\r\n        this.pSendHandler = {};\r\n        this.pListenHandler = {};\r\n        this.listenMessageDelay = [];\r\n        this.pListenMessageDelay = [];\r\n    },\r\n\r\n    destroy() {\r\n        if (this.socket) {\r\n            this.socket.close(NormalCloseCode);\r\n        }\r\n    },\r\n\r\n    update(dt) {\r\n        this.dtsum += dt;\r\n        if (this.dtsum < 1) {\r\n            return;\r\n        }\r\n        this.currTime += 1000;\r\n        this.dtsum -= 1;\r\n\r\n        switch (this.state) {\r\n            case MgrState.Connecting:\r\n                if (this.currTime - this.lastConnectTime > ConnectTimeOut) {\r\n                    this._showConnectTimeOut(true);\r\n                    this.socket.close(NormalCloseCode);\r\n                }\r\n                break;\r\n            case MgrState.reConnect:\r\n                if (this.currTime - this.lastConnectTime > ConnectTimeOut) {\r\n                    this._showDisConnect(true);\r\n                    this.socket.close(NormalCloseCode);\r\n                }\r\n                break;\r\n            case MgrState.Connected:\r\n                if (this.currTime - this.onOpenTime > MaxUnLoginTime) {\r\n                    this.socket.close(NormalCloseCode);\r\n                }\r\n                break;\r\n            case MgrState.Logined:\r\n                // 检测消息是否超时\r\n                if (this.lastResponseFlag) {\r\n                    if (this.currTime - this.lastSendTime > HeartBeatInterval) {\r\n                        this.sendHeartBeat();\r\n                    }\r\n                } else {\r\n                    if (this.currTime - this.lastSendTime > MsgTimeout) {\r\n                        this.sendHeartBeat();\r\n                    }\r\n                }\r\n                // 检测是否有转场景的滞留消息\r\n                if (len(GameMsgCfg) > 0 && this.listenMessageDelay.length > 0) {\r\n                    let findFlag = false;\r\n                    for (let i = 0; i < this.listenMessageDelay.length; i++){\r\n                        const data = this._getMsgCfgData(this.listenMessageDelay[i].cmd, GameMsgCfg);\r\n                        if (data.cmdStr && data.netType === 'notify' && this.listenHandler[data.cmdStr]) {\r\n                            findFlag = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (findFlag) {\r\n                        this.listenMessageDelay.forEach(function (item) {\r\n                            this._gonMessage(item.cmd, item.message, false);\r\n                        }, this);\r\n                        this.listenMessageDelay = [];\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    },\r\n\r\n    _onClose(event) {\r\n        fun.log('net', `_onClose state = ${this.state} `, event);\r\n        switch  (this.state) {\r\n            case MgrState.Connecting:\r\n                if (this.connectTimes < MaxConnectTimes) {\r\n                    this.connect();\r\n                } else {\r\n                    this.state = MgrState.ConnectTimeOut;\r\n                    this._showConnectError(true);\r\n                }\r\n                break;\r\n            case MgrState.reConnect:\r\n                if (this.connectTimes < MaxConnectTimes) {\r\n                    this.connect();\r\n                } else {\r\n                    this.state = MgrState.ConnectTimeOut;\r\n                    this._showConnectError(true);\r\n                }\r\n                break;\r\n            case MgrState.Connected:\r\n                this._showConnectError(false);\r\n                break;\r\n            case MgrState.Logined:\r\n                this._reConnect();\r\n                break;\r\n        }\r\n    },\r\n\r\n    _reConnect() {\r\n        this.state = MgrState.reConnect;\r\n        this.connect();\r\n    },\r\n\r\n    _onOpen() {\r\n        fun.log('net', '_onOpen');\r\n        this.onOpenTime = this.currTime;\r\n        this.lastConnectTime = null;\r\n        this.connectTimes = 0;\r\n        this._showMsgTimeOut(false);\r\n        this._showConnectTimeOut(false);\r\n        if (this.state === MgrState.reConnect) {\r\n            let token = cc.sys.localStorage.getItem('Token');\r\n            if (!token) {\r\n                return;\r\n            }\r\n            fun.net.pSend('TokenLogin', {Token: token, Platform: cc.sys.os}, function(data) {\r\n                fun.net.setState('Login');\r\n                let userInfo = fun.db.getData('UserInfo');\r\n                if (!data.RoomId || data.RoomId === 0) {\r\n                    return;\r\n                }\r\n                fun.net.pSend('EnterRoom', {RoomId: data.RoomId, Address: userInfo.location}, function(rsp) {\r\n                    fun.db.setData('RoomInfo', rsp);\r\n                    fun.db.setData('EnterRoomId', data.RoomId);\r\n                    fun.event.dispatch('ReconnectInGame', true);\r\n                });\r\n            });\r\n        } else {\r\n            this.state = MgrState.Connected;\r\n            this.openHandler.forEach(function (handler) {\r\n                handler();\r\n            });\r\n        }\r\n    },\r\n\r\n    _onError(event) {\r\n        fun.log('net', 'onError', event);\r\n    },\r\n\r\n    _onMessage(event) {\r\n        this.lastResponseFlag = true;\r\n        let data = event.changeData || event.data;\r\n        let cmd = parseInt(data.substr(0, CmdLength));\r\n        let message = null;\r\n        let str = data.substr(CmdLength, data.length);\r\n        if (str && str.length > 0) {\r\n            try {\r\n                message = JSON.parse(str);\r\n                if (message.Error) {\r\n                    return;\r\n                }\r\n            } catch (err) {\r\n                fun.log('net', '_onMessage json error ', err);\r\n            }\r\n        }\r\n        // cc.YL.network(\"服务器推送的消息cmd:%s\",cmd);\r\n        if (cmd < MaxPlatformCmd) {\r\n            this._ponMessage(cmd, message);\r\n        } else {\r\n            // 场景转换期间保存消息\r\n            if (len(GameMsgCfg) > 0) {\r\n                this._gonMessage(cmd, message, true);\r\n            } else {\r\n                this.listenMessageDelay.push({cmd: cmd, message: message});\r\n            }\r\n        }\r\n    },\r\n\r\n    _gonMessage(cmd, message, save = false) {\r\n        const data = this._getMsgCfgData(cmd, GameMsgCfg);\r\n        if (!data.cmdStr) {\r\n            fun.log('net', '_gonMessage error no cmdStr ' + cmd);\r\n            return;\r\n        }\r\n        if (data.netType === 'rsp' && this.sendHandler[data.cmdStr]) {\r\n            let timeCha = Date.now() - this._netStartDelayTime;\r\n            fun.event.dispatch('NetDelayTime', timeCha);//1秒是1000\r\n            fun.log('net', '_gonMessage callback', cmd, data.cmdStr, message);\r\n            let cb = this.sendHandler[data.cmdStr];\r\n            delete this.sendHandler[data.cmdStr];\r\n            cb(message);\r\n            return;\r\n        }\r\n        if (data.netType === 'notify' && this.listenHandler[data.cmdStr]) {\r\n            fun.log('net', '_gonMessage handler ', cmd, data.cmdStr, message);\r\n            this.listenHandler[data.cmdStr](message);\r\n            return;\r\n        }\r\n        if (save) {\r\n            this.listenMessageDelay.push({cmd: cmd, message: message});\r\n        } else {\r\n            fun.log('net', '_gonMessage error no handler', cmd, data.cmdStr, message);\r\n        }\r\n    },\r\n\r\n    _ponMessage(cmd, message) {\r\n        let data = this._getMsgCfgData(cmd, PlatformMsgCfg);\r\n        if (!data.cmdStr) {\r\n            fun.log('net', '_ponMessage error no cmdStr ' + cmd);\r\n            return;\r\n        }\r\n        if (data.netType === 'rsp' && this.pSendHandler[data.cmdStr]) {\r\n            let timeCha = Date.now() - this._netStartDelayTime;\r\n            fun.event.dispatch('NetDelayTime', timeCha);//1秒是1000\r\n            if(data.cmdStr === 'CreateRoom' || data.cmdStr === 'EnterRoom'){\r\n                fun.db.setData('NetDelayTime', timeCha);\r\n            }\r\n            fun.log('net', '_ponMessage callback', cmd, data.cmdStr, message);\r\n            let cb = this.pSendHandler[data.cmdStr];\r\n            delete this.pSendHandler[data.cmdStr];\r\n            cb(message);\r\n            return;\r\n        }\r\n        if (data.netType === 'notify') {\r\n            if (this.pListenHandler[data.cmdStr]) {\r\n                fun.log('net', '_ponMessage listen', cmd, data.cmdStr, message);\r\n                this.pListenHandler[data.cmdStr](message);\r\n            } else {\r\n                this.pListenMessageDelay.push({cmdStr: data.cmdStr, message: message});\r\n            }\r\n            return;\r\n        }\r\n        fun.log('net', '_ponMessage listen', cmd, data.cmdStr, message);\r\n    },\r\n\r\n    sendHeartBeat() {\r\n        if (this.sendHeartbeatTimes >= MaxHeartBeatTimes) {\r\n            this.socket.close(NormalCloseCode);\r\n            return;\r\n        }\r\n        let flag = this.pSend('Heartbeat', '', function () {\r\n            this._showMsgTimeOut(false);\r\n            this.sendHeartbeatTimes = 0;\r\n        }.bind(this));\r\n        if (this.sendHeartbeatTimes > 0 && flag) {\r\n            this._showMsgTimeOut(true);\r\n        }\r\n        this.sendHeartbeatTimes++;\r\n    },\r\n\r\n    _getMsgCfgData(cmd, cfg) {\r\n        for (const cmdStr in cfg) {\r\n            if (cfg[cmdStr].rsp === cmd) {\r\n                return {cmdStr: cmdStr, netType: 'rsp'}\r\n            } else if (cfg[cmdStr].notify === cmd) {\r\n                return {cmdStr: cmdStr, netType: 'notify'}\r\n            }\r\n        }\r\n        return {cmdStr: false, netType: false};\r\n    },\r\n\r\n    _showConnectError(flag) {\r\n        fun.log('net', 'showConnectError ' + flag);\r\n        if (!flag) {\r\n            return;\r\n        }\r\n        // const verUrl = '';\r\n        // let xhr = new XMLHttpRequest();\r\n        // xhr.onreadystatechange = function() {\r\n        //     if (xhr.readyState === 4) {\r\n        //         if (xhr.status >= 200 && xhr.status < 400) {\r\n        //             console.log(JSON.parse(xhr.responseText));\r\n        //         }\r\n        //     }\r\n        // }\r\n        // xhr.open(\"GET\", verUrl, true);\r\n        // xhr.send();\r\n        fun.event.dispatch('Zhuanquan', {flag: false});\r\n        let data = {\r\n            contentStr: '连接失败，确认无误后重试',\r\n            okBtnStr: '重试',\r\n            closeBtnStr: '退出',\r\n            okCb () {\r\n                fun.utils.restart();\r\n            },\r\n            closeCb () {\r\n                fun.utils.endGame();\r\n            }\r\n        };\r\n        fun.event.dispatch('MinDoubleButtonPop', data);\r\n    },\r\n\r\n    _showDisConnect() {\r\n        fun.event.dispatch('Zhuanquan', {flag: false});\r\n        let data = {\r\n            contentStr: '与服务器断开连接！',\r\n            okBtnStr: '重试',\r\n            closeBtnStr: '退出',\r\n            okCb () {\r\n                fun.utils.restart();\r\n            },\r\n            closeCb () {\r\n                fun.utils.endGame();\r\n            }\r\n        };\r\n        fun.event.dispatch('MinDoubleButtonPop', data);\r\n    },\r\n\r\n    _showConnectTimeOut(flag) {\r\n        fun.event.dispatch('Zhuanquan', {flag: flag, text: '网络连接中，请稍等...', from: 'net'});\r\n    },\r\n\r\n    _showMsgTimeOut(flag) {\r\n        fun.event.dispatch('Zhuanquan', {flag: flag, text: '网络连接中，请稍等...', from: 'net'});\r\n    },\r\n\r\n    _isConnected() {\r\n        return this.socket !== null && this.socket.readyState === WebSocket.OPEN;\r\n    },\r\n});"]}