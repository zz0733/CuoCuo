{"version":3,"sources":["../../../../../../../assets/mahjong/script/game/common/assets/mahjong/script/game/common/mjNetMgr.js"],"names":["mjNetMgrSys","reqCB","moduleName","netName","cb","fun","net","listen","messageList","push","reqPCB","pListen","pMessageList","init","KEYS","k","value","rmNet","gameType","cc","log","forEach","meName","rmListen","rmPListen","curMgr","module","exports","definedList","gameConst","maJiangWenLing","require","new","maJiangHuangYan","scMahjong","curGameType","db","getData","GameType","mgrSys","prototype","setGameMsgCfg","getNetCfg","getIns","GAME","MENU","REB","REA","CHAT","cSend","key","data","handler","argumentList","i","arguments","length","apply"],"mappings":";;;;;;AAAA,IAAIA,cAAc,SAAdA,WAAc,GAAU;AACxB,SAAKC,KAAL,GAAa,UAASC,UAAT,EAAqBC,OAArB,EAA8BC,EAA9B,EAAiC;AAC1CC,YAAIC,GAAJ,CAAQC,MAAR,CAAeJ,OAAf,EAAwBC,EAAxB;AACA,aAAKI,WAAL,CAAiBN,UAAjB,EAA6BO,IAA7B,CAAkCN,OAAlC;AACH,KAHD;;AAKA,SAAKO,MAAL,GAAc,UAASR,UAAT,EAAqBC,OAArB,EAA8BC,EAA9B,EAAiC;AAC3CC,YAAIC,GAAJ,CAAQK,OAAR,CAAgBR,OAAhB,EAAyBC,EAAzB;AACA,aAAKQ,YAAL,CAAkBV,UAAlB,EAA8BO,IAA9B,CAAmCN,OAAnC;AACH,KAHD;;AAKA,SAAKU,IAAL,GAAY,UAASC,IAAT,EAAc;AACtB,aAAKA,IAAL,GAAYA,IAAZ;AACA,YAAIN,cAAc,EAAlB;AACA,YAAII,eAAe,EAAnB;AACA,aAAI,IAAIG,CAAR,IAAa,KAAKD,IAAlB,EAAuB;AACnB,gBAAIE,QAAQ,KAAKF,IAAL,CAAUC,CAAV,CAAZ;AACAP,wBAAYQ,KAAZ,IAAqB,EAArB;AACAJ,yBAAaI,KAAb,IAAsB,EAAtB;AACH;AACD,aAAKR,WAAL,GAAmBA,WAAnB;AACA,aAAKI,YAAL,GAAoBA,YAApB;AACH,KAXD;;AAaA,SAAKK,KAAL,GAAa,UAASC,QAAT,EAAkB;AAC3BC,WAAGC,GAAH,CAAO,gCAAP,EAAyCF,QAAzC;AACA,aAAKV,WAAL,CAAiBU,QAAjB,EAA2BG,OAA3B,CAAmC,UAASC,MAAT,EAAgB;AAC9CjB,gBAAIC,GAAJ,CAAQiB,QAAR,CAAiBD,MAAjB;AACJ,SAFD;AAGA,aAAKd,WAAL,CAAiBU,QAAjB,IAA6B,EAA7B;AACA,aAAKN,YAAL,CAAkBM,QAAlB,EAA4BG,OAA5B,CAAoC,UAASC,MAAT,EAAgB;AAC/CjB,gBAAIC,GAAJ,CAAQkB,SAAR,CAAkBF,MAAlB;AACJ,SAFD;AAGA,aAAKV,YAAL,CAAkBM,QAAlB,IAA8B,EAA9B;AACH,KAVD;AAWH,CAnCD;;AAsCA,IAAIO,MAAJ;AACAC,OAAOC,OAAP,GAAiB;AACbd,UAAO,gBAAU;AACb,YAAIe,cAA8C,EAAlD;AACAA,oBAAYC,UAAUX,QAAV,CAAmBY,cAA/B,IAAkDC,QAAQ,YAAR,EAAsBC,GAAtB,EAAlD;AACAJ,oBAAYC,UAAUX,QAAV,CAAmBe,eAA/B,IAAkDF,QAAQ,YAAR,EAAsBC,GAAtB,EAAlD;AACAJ,oBAAYC,UAAUX,QAAV,CAAmBgB,SAA/B,IAAkDH,QAAQ,YAAR,EAAsBC,GAAtB,EAAlD;;AAEA,YAAIG,cAAc9B,IAAI+B,EAAJ,CAAOC,OAAP,CAAe,UAAf,EAA2BC,QAA7C;AACA,YAAIC,SAAUX,YAAYO,WAAZ,CAAd;AACA,YAAGI,MAAH,EAAU;AACNA,mBAAOC,SAAP,GAAmB,IAAIxC,WAAJ,EAAnB;AACAyB,qBAAS,IAAIc,MAAJ,EAAT;AACAd,mBAAOZ,IAAP,CAAY,KAAKC,IAAjB;AACAT,gBAAIC,GAAJ,CAAQmC,aAAR,CAAsBhB,OAAOiB,SAAP,EAAtB;AACH,SALD,MAKM;AACFrC,gBAAIe,GAAJ,CAAQ,IAAR,EAAc,qDAAqDe,WAAnE;AACH;AACJ,KAjBY;;AAmBbQ,YAAS,kBAAU;AACf,eAAOlB,MAAP;AACH,KArBY;;AAuBbX,UAAO;AACH8B,cAAS,SADN;AAEHC,cAAS,QAFN;AAGHC,aAAS,kBAHN;AAIHC,aAAS,iBAJN;AAKHC,cAAS;AALN,KAvBM;;AA+BbC,WAAQ,eAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA4B;AAChC,YAAG3B,OAAOyB,GAAP,CAAH,EAAe;AACX,gBAAIG,eAAe,EAAnB;AACA,iBAAI,IAAIC,IAAE,CAAV,EAAaA,IAAEC,UAAUC,MAAzB,EAAiCF,GAAjC,EAAqC;AACjC,oBAAGA,KAAK,CAAR,EAAU;AACND,iCAAa5C,IAAb,CAAkB8C,UAAUD,CAAV,CAAlB;AACH;AACJ;AACD7B,mBAAOyB,GAAP,EAAYO,KAAZ,CAAkBhC,MAAlB,EAA0B4B,YAA1B;AACH,SARD,MAQM;AACFhD,gBAAIe,GAAJ,CAAQ,IAAR,EAAc,sEAAsE8B,GAApF;AACH;AACJ;AA3CY,CAAjB","file":"mjNetMgr.js","sourceRoot":"../../../../../../../assets/mahjong/script/game/common","sourcesContent":["var mjNetMgrSys = function(){\n    this.reqCB = function(moduleName, netName, cb){\n        fun.net.listen(netName, cb);\n        this.messageList[moduleName].push(netName)\n    }\n\n    this.reqPCB = function(moduleName, netName, cb){\n        fun.net.pListen(netName, cb);\n        this.pMessageList[moduleName].push(netName)\n    }\n\n    this.init = function(KEYS){\n        this.KEYS = KEYS;\n        var messageList = {};\n        var pMessageList = {};\n        for(let k in this.KEYS){\n            var value = this.KEYS[k]\n            messageList[value] = [] \n            pMessageList[value] = [];\n        }\n        this.messageList = messageList;\n        this.pMessageList = pMessageList;\n    }\n\n    this.rmNet = function(gameType){\n        cc.log(\"------rmNet---------, gameType\", gameType);\n        this.messageList[gameType].forEach(function(meName){\n             fun.net.rmListen(meName);\n        })\n        this.messageList[gameType] = [];\n        this.pMessageList[gameType].forEach(function(meName){\n             fun.net.rmPListen(meName);\n        })\n        this.pMessageList[gameType] = [];\n    }\n}\n\n\nvar curMgr;\nmodule.exports = {\n    init : function(){\n        var definedList                                 = {}\n        definedList[gameConst.gameType.maJiangWenLing]  = require(\"wlmjNetMgr\").new();\n        definedList[gameConst.gameType.maJiangHuangYan] = require(\"hymjNetMgr\").new();\n        definedList[gameConst.gameType.scMahjong]       = require(\"scmjNetMgr\").new();\n\n        var curGameType = fun.db.getData('RoomInfo').GameType\n        var mgrSys  = definedList[curGameType];\n        if(mgrSys){\n            mgrSys.prototype = new mjNetMgrSys();\n            curMgr = new mgrSys();\n            curMgr.init(this.KEYS)\n            fun.net.setGameMsgCfg(curMgr.getNetCfg());\n        }else {\n            fun.log(\"mj\", \"mjNetMgr init: this curGameType has no defined :\" + curGameType)\n        }\n    },\n\n    getIns : function(){\n        return curMgr;\n    },\n\n    KEYS : {\n        GAME   : \"GameMgr\",\n        MENU   : \"MenuUI\",\n        REB    : \"Reconnect_before\",\n        REA    : \"Reconnect_after\",\n        CHAT   : \"chatUI\",\n    },\n\n    cSend : function(key, data, handler){\n        if(curMgr[key]){\n            var argumentList = [];\n            for(let i=0; i<arguments.length; i++){\n                if(i != 0){\n                    argumentList.push(arguments[i]);\n                }\n            }\n            curMgr[key].apply(curMgr, argumentList);\n        }else {\n            fun.log(\"mj\", \"mjNetMgr cSend : --------key not  registe in mjNetMgr ---- key : \" + key);\n        }\n    },\n};\n\n\n"]}