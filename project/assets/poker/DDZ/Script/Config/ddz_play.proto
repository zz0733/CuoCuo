syntax = "proto2";

package ylproto;
import public "ddz_base.proto";

//准备
message ddz_play_ready_req {
    optional int64 userId = 1;
}

message ddz_play_ready_ack {
    optional Header retMsg = 1;
    optional bool isReadyOk = 2;
}

//开局
message ddz_play_opening {
    optional int32 second = 1; //操作时间
    optional int32 currentRound = 2; //当前局数
}

//进入叫分阶段的广播
message ddz_play_jiaoFen {
    optional Header retMsg = 1; //包含叫分阶段第一个叫分的玩家
    repeated jiaoFenOption option = 2; //可以叫分的选项

}

//玩家请求叫分
message ddz_play_jiaoFen_req {
    optional int64 userId = 1; //叫分的玩家
    optional jiaoFenOption fen = 2; //叫的多少分
}

message ddz_play_jiaoFen_ack {
    optional Header retMsg = 1;
    optional jiaoFenOption fen = 2; //叫了多少分
    optional bool isOk = 3;
}

//进入加倍阶段的广播
message ddz_play_jiaBei {
    optional Header retMsg = 1; //Header中的userId为地主id
}

//玩家请求加倍
message ddz_play_jiaBei_req {
    optional int64 userId = 1;
    optional bool isJiaBei = 2;
}

message ddz_play_jiaBei_ack {
    optional Header retMsg = 1;
    optional bool jiaBeiResult = 2; //加倍结果
    optional bool isOk = 3;
}

//玩家出牌的请求
message ddz_play_outCards_req {
    optional int64 userId = 1;
    repeated int32 paiIds = 2;
}

message ddz_play_outCards_ack {
    optional Header retMsg = 1;
    optional bool isOk = 2;
    repeated int32 paiIds = 3; //出牌IDs
    optional outPaiType outType = 4; // 出牌类型
    optional int32 remainPaiCount = 5; //剩余手牌的张数
}

message ddz_play_rate {
    optional int64 userId = 1; //ID
    optional int32 rate = 2; //倍数
}

message ddz_play_overturn {
    optional int64 activeUser = 1; //该谁操作
    optional playerActType actType = 2;
    optional int32 actTime = 3; // 操作时间
    optional bool canOut = 4; //是否大得起上家出的牌
    optional bool isNewRound = 5; //是否是新的一圈
    repeated ddz_play_rate playerRate = 6; //每个玩家的倍数
}

//玩家要不起，请求过
message ddz_play_pass_req {
    optional int64 userId = 1;
}

message ddz_play_pass_ack {
    optional Header retMsg = 1;
    optional bool isOk = 2;
}

message ddz_play_userRoundLotteryInfo {
    optional int64 userId = 1;
    optional int32 score = 2; //单局得分
    optional int32 totalScore = 3; //总得分
    optional int32 rate = 4; //倍数
    optional int32 boomCount = 5; //炸弹数量
    optional bool isWinner = 6; //是否是赢家
    repeated int32 handPokers = 7; //手牌
    repeated int32 remainPokers = 8; //剩余手牌
    optional bool isDiZhu = 9; //是否是地主
    optional string extend = 10; //扩展字段
}

//单局结算
message ddz_play_roundResult {
    repeated ddz_play_userRoundLotteryInfo usersRoundLotteryInfo = 1;
    optional int32 currentRound = 2; //当前局数
    optional int32 roundLimit = 3; //总的局数
    optional uint32 password = 4;
    optional bool isSpring = 5; //是否是春天
    optional bool isReverseSpring = 6; //是否是反春
    //diFen
}

message ddz_play_userLotteryInfo {
    optional int64 userId = 1; //玩家ID
    optional string headUrl = 2; //头像
    optional string nickName = 3; //昵称
    optional int32 boomCount = 4; //炸弹数量
    optional int32 airCount = 5; //飞机数量
    optional int32 lianDuiCount = 6; //连对数量
    optional int32 springCount = 7; //春天数量
    optional int32 score = 8; //积分
    optional bool isChampion = 9; //是否是冠军
    optional int32 expendCardsCount = 10; //房卡消耗
    optional int32 remainCardsCount = 11; //剩余房卡数
}

//全局结算
message ddz_play_lottery {
    optional Header retMsg = 1;
    repeated ddz_play_userLotteryInfo usersLotteryInfo = 2; //所有玩家的结算信息
    optional int32 round = 3; //当前第几局
    optional uint32 password = 4; //房间号
    optional bool isNormalEnd = 5; //是否是正常结束
}

//登录验证
message ddz_play_login_gameServer {
    optional int64 userId = 1;
}

message ddz_play_login_gameServer_ack {
    optional Header retMsg = 1;
    optional bool isOk = 2;
}